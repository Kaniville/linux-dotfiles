#!/bin/python3

from urllib.request import urlopen, urlretrieve
from json import loads
from os import listdir, path
from random import choice
from subprocess import run
from argparse import ArgumentParser

# Argument parser setup
argument_parser = ArgumentParser()
argument_parser.add_argument('-b', '--bing', action="store_true", help='Set a Bing walpaper')
argument_parser.add_argument('-p', '--picsum', action="store_true", help='Set a Picsum walpaper')
argument_parser.add_argument('-r', '--random', required=False, help='Select a random wallpaper from a directory')
option = argument_parser.parse_args()


# ------------------------------------------------------------------------------------------
class Downloaded_wallpaper():
    def __init__(self):
        # Default directory to store background
        self.background_dir = path.abspath(path.expanduser('~/.cache'))

    # Get daily Bing wallpaper, download it and set it
    def bing_wallpaper(self):
        bing_url = 'https://www.bing.com/HPImageArchive.aspx?format=js&idx=0&n=1&mkt=fr-FR'
        bing_json = loads(urlopen(bing_url).read().decode("utf-8"))

        wallpaper_file = f'{self.background_dir}/background.jpg'
        wallpaper_url = "https://bing.com" + bing_json['images'][0]['url']

        try:
            urlretrieve(wallpaper_url, wallpaper_file)
            set_wallpaper(wallpaper_file)
        except:
            exit()

    # Get random Picsum wallpaper, download it and set it
    def picsum_wallpaper(self):
        wallpaper_file = f'{self.background_dir}/background.jpg'
        wallpaper_url = 'https://picsum.photos/1920/1080'

        try:
            urlretrieve(wallpaper_url, wallpaper_file)
            set_wallpaper(wallpaper_file)
        except:
            exit()


# ------------------------------------------------------------------------------------------
class Local_wallpaper():
    def __init__(self):
        # Default directory to store background
        self.background_dir = path.abspath(path.expanduser(option.random))

    # Get random wallpaper from a selected directory and set it
    def random_wallpaper(self):
        random_wallpaper = choice(listdir(self.background_dir))
        wallpaper_file = f'{self.background_dir}/{random_wallpaper}'

        try:
            set_wallpaper(wallpaper_file)
        except:
            exit()


# ------------------------------------------------------------------------------------------
# Set gnome wallpaper
def set_wallpaper(wallpaper_file):
    run(['gsettings', 'set', 'org.gnome.desktop.background', 'picture-uri', f'file://{wallpaper_file}'], check=True)
    run(['gsettings', 'set', 'org.gnome.desktop.background', 'picture-uri-dark', f'file://{wallpaper_file}'], check=True)


# ---------------------------------------------------------------------------------------------------------------------
# Select an option
if option.bing:
    Downloaded_wallpaper().bing_wallpaper()
if option.picsum:
    Downloaded_wallpaper().picsum_wallpaper()
if option.random:
    Local_wallpaper().random_wallpaper()
